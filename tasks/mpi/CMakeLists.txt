get_filename_component(MODULE_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
message(STATUS      "${MODULE_NAME} tasks")
set(exec_func_tests "${MODULE_NAME}_func_tests")
set(exec_perf_tests "${MODULE_NAME}_perf_tests")
set(exec_func_lib   "${MODULE_NAME}_module_lib")
set(project_suffix  "_${MODULE_NAME}")

if( USE_MPI )
  SUBDIRLIST(subdirs ${CMAKE_CURRENT_SOURCE_DIR})

  foreach(subd ${subdirs})
    get_filename_component(PROJECT_ID ${subd} NAME)
    set(PATH_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/${subd}")
    set(PROJECT_ID "${PROJECT_ID}${project_suffix}")
    message(STATUS "-- " ${PROJECT_ID})

    file(GLOB_RECURSE TMP_LIB_SOURCE_FILES ${PATH_PREFIX}/include/* ${PATH_PREFIX}/src/*)
    list(APPEND LIB_SOURCE_FILES ${TMP_LIB_SOURCE_FILES})

    file(GLOB TMP_SRC_RES ${PATH_PREFIX}/src/*)
    list(APPEND SRC_RES ${TMP_SRC_RES})

    file(GLOB_RECURSE TMP_FUNC_TESTS_SOURCE_FILES ${PATH_PREFIX}/func_tests/*)
    list(APPEND FUNC_TESTS_SOURCE_FILES ${TMP_FUNC_TESTS_SOURCE_FILES})

    #  file(GLOB_RECURSE TMP_PERF_TESTS_SOURCE_FILES ${PATH_PREFIX}/perf_tests/*)
    #  list(APPEND PERF_TESTS_SOURCE_FILES ${TMP_PERF_TESTS_SOURCE_FILES})
  endforeach()

  project(${exec_func_lib})
  list(LENGTH SRC_RES RES_LEN)
  if(RES_LEN EQUAL 0)
    add_library(${exec_func_lib} INTERFACE ${LIB_SOURCE_FILES})
  else()
    add_library(${exec_func_lib} STATIC ${LIB_SOURCE_FILES})
  endif()
  set_target_properties(${exec_func_lib} PROPERTIES LINKER_LANGUAGE CXX)

  add_executable(${exec_func_tests} ${FUNC_TESTS_SOURCE_FILES})
  target_link_libraries(${exec_func_tests} PUBLIC core_module_lib ${exec_func_lib})

#  add_executable( ${exec_perf_tests} ${PERF_TESTS_SOURCE_FILES} )
#  target_link_libraries(${exec_perf_tests} PUBLIC core_module_lib ${exec_func_lib})

  if( MPI_COMPILE_FLAGS )
    set_target_properties(${exec_func_tests} PROPERTIES COMPILE_FLAGS "${MPI_COMPILE_FLAGS}")
  endif( MPI_COMPILE_FLAGS )

  if( MPI_LINK_FLAGS )
    set_target_properties(${exec_func_tests} PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
  endif( MPI_LINK_FLAGS )
  target_link_libraries(${exec_func_tests} PUBLIC ${MPI_LIBRARIES})

  add_dependencies(${exec_func_tests} ppc_boost)
  target_link_directories(${exec_func_tests} PUBLIC ${CMAKE_BINARY_DIR}/ppc_boost/install/lib)
  if (NOT MSVC)
    target_link_libraries(${exec_func_tests} PUBLIC boost_mpi)
  endif ()
  add_dependencies(${exec_func_tests} ppc_googletest)
  target_link_directories(${exec_func_tests} PUBLIC ${CMAKE_BINARY_DIR}/ppc_googletest/install/lib)
  target_link_libraries(${exec_func_tests} PUBLIC gtest gtest_main)

#  if( MPI_COMPILE_FLAGS )
#    set_target_properties( ${exec_perf_tests} PROPERTIES COMPILE_FLAGS "${MPI_COMPILE_FLAGS}" )
#  endif( MPI_COMPILE_FLAGS )
#
#  if( MPI_LINK_FLAGS )
#    set_target_properties( ${exec_perf_tests} PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}" )
#  endif( MPI_LINK_FLAGS )
#  target_link_libraries( ${exec_perf_tests} PUBLIC ${MPI_LIBRARIES} )
#  add_dependencies(${exec_perf_tests} ppc_boost)
#  target_link_directories(${exec_perf_tests} PUBLIC ${CMAKE_BINARY_DIR}/ppc_boost/install/lib)
#  if (NOT MSVC)
#    target_link_libraries(${exec_perf_tests} PUBLIC boost_mpi)
#  endif ()
#  add_dependencies(${exec_perf_tests} ppc_googletest)
#  target_link_directories(${exec_perf_tests} PUBLIC ${CMAKE_BINARY_DIR}/ppc_googletest/install/lib)
#  if (NOT MSVC)
#    target_link_libraries(${exec_perf_tests} PUBLIC gtest gtest_main)
#  endif ()

  enable_testing()
  add_test(NAME ${exec_func_tests} COMMAND ${exec_func_tests})
  #add_test(NAME ${exec_perf_tests} COMMAND ${exec_perf_tests})

  CPPCHECK_TEST("${exec_func_tests}" "${FUNC_TESTS_SOURCE_FILES}")
  #CPPCHECK_TEST("${exec_perf_tests}" "${PERF_TESTS_SOURCE_FILES}")
else( USE_MPI )
  message(WARNING "${exec_func_lib} not build!")
endif( USE_MPI )
